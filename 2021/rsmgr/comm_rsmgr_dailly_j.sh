#!/usr/bin/env bash
######################################################################
##脚本注释区域：描述脚本功能，使用方法
##脚本名：comm_rsmgr_daily_j.sh
##程序功能说明：资源服务化天常驻脚本

##使用示例及参数说明：
##脚本名：comm_rsmgr_daily_j.sh
##"12345672017010100" \			  			#参数1：task_id
##"cctsys_dev" \			  					        #参数2：数据库用户名
##"TyM*2CnEm" \			  			            #参数3：数据库密码
##"(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.1.8.99)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=orcl12cpdb1)))" \			#参数4：数据库tns
######################################################################

######################################################################
##版本信息：版本注释，描述修改内容：
#####################################################
##版本号：v1.0
##修改日期：20211123
##修改内容：新建
##修改人员：陈棋旭
#####################################################


######################################################################
##参数格式判断(自定义)：判断参数个数是否符合要求
######################################################################
if [[ $# -lt 4 ]]; then
	echo "参数个数不足4个：1.task_id 2.数据库用户名 3.数据库密码 4.数据库tns";
	exit 1;
fi


######################################################################
##初始化用户环境变量(模板)
######################################################################
if [[ -f ~/.bash_profile ]] ; then
    . ~/.bash_profile;
fi;
##判断系统是windows还是Linux
system_name=`uname`
##路径
FWDIR="$(cd `dirname $0`;pwd)"


######################################################################
##引用通用函数脚本(模板)
######################################################################
if [[ ${system_name} =~ "MINGW64_NT" ]]; then
    TOOL_PATH=${FWDIR}/../../utils/
    if [[ -f ${TOOL_PATH}/tool.func ]]; then
        . ${TOOL_PATH}/tool.func
    fi
    export PATH=$PATH:$ORACLE_HOME
else
    if [[ -f /bi/app/script/comm_shell_j.sh ]] ; then
        . /bi/app/script/comm_shell_j.sh;
    elif [[ -f ~/newland/app/script/comm_shell_j.sh ]] ; then
        . ~/newland/app/script/comm_shell_j.sh
    fi;
fi;

######################################################################
##通用变量初始化(模板)：定义脚本通用的基本参数并进行初始化，新增的变量需要修改脚本模板
######################################################################
##任务自动退出时间,后台常驻天任务第2天早上0点以后自动退出,后面判断用时间戳对比
next_day=`date -d "1 day" +%Y%m%d`;
auto_exit_time=`date -d "${next_day}" +%s`;


######################################################################
##通用函数(模板)：各脚本使用的通用函数，不够的在模板中添加
######################################################################
##返回结果处理
_exit()
{
	if [[ ${1} -eq 0 ]] ; then
		fun_log 0 "--------------------------------脚本逻辑处理结束--------------------------------";
		##执行结束时间
		end_time=`date +"%s"`;
		##执行耗时
		elapse=$((${end_time}-${begin_time}));
		fun_log 0 "模板id:${task_id}  脚本执行耗时:${elapse} s";
		exit 0;
	else
		fun_log 2 "--------------------------------脚本逻辑处理失败--------------------------------";
		exit 1;
	fi;
}

######################################################################
##脚本传入参数转变量赋值(自定义)：将传入的参数改成脚本中使用的变量，统一使用小写
######################################################################
#任务id
task_id=${1};
#数据库用户名
db_username=${2};
#数据库密码
db_password=${3};
#数据库tns
db_tns=${4};


######################################################################
##脚本传入参数转变量打印(自定义)：打印脚本传入的各个变量参数
######################################################################
fun_log 0 "----------------------------------打印参数信息-----------------------------";
fun_log 0 "任务id:${task_id}";
fun_log 0 "数据库用户名:${db_username}";
fun_log 0 "数据库密码:${db_password}";
fun_log 0 "数据库tns:${db_tns}";


######################################################################
##脚本常量赋值(自定义)：定义脚本中使用的常量，统一使用小写
######################################################################
##程序休息时睡眠时间
sleep_sec="30s";
##程序部署路径
app_path="/bi/app/script";
##修改oracle客户端环境变量,处理值是中文的情况
export NLS_LANG=AMERICAN_AMERICA.UTF8;


######################################################################
##脚本自定义函数(自定义)：脚本中使用到的自定义函数
######################################################################
##调用存储过程
##参数1：存储过程名称
function call_produce(){
##执行开始时间
local produce_begin_time=`date +"%s"`;
##执行存储过程
local call_tmp=`
sqlplus -s ${db_username}/${db_password}@${db_tns} <<EOF
--显示dbms_output.put_line结果
set serveroutput on;
--不显示反馈信息
set feedback off;
--不显示标题
set heading off;
--关闭显示脚本中的命令的执行结果
set termout off;
declare
RTN_CODE NUMBER;
RTN_INFO VARCHAR2(4000);
begin
${1}(RTN_CODE,RTN_INFO);
dbms_output.put_line('@'||RTN_CODE||'@'||RTN_INFO);
end;
/
exit;
EOF
`;
##执行结束时间
local produce_end_time=`date +"%s"`;
##执行耗时
local produce_elapse=$((${produce_end_time}-${produce_begin_time}));
##分割结果，获取返回code和返回内容
local array=(${call_tmp//@/ });
let array_info_len=${#array[@]}-1;
let array_code_len=${array_info_len}-1;
local rtn_code=${array[${array_code_len}]};
local rtn_info=${array[${array_info_len}]};
if [[ ${rtn_code} -ne 0 ]]; then
  fun_log 2 "执行存储过程${1}，RTN_CODE:${rtn_code}，RTN_INFO:${rtn_info}，执行耗时:${produce_elapse} s\n----------------执行存储过程异常${1}，输出日志----------------\n${call_tmp}"
else
  fun_log 0 "执行存储过程${1}，RTN_CODE:${rtn_code}，RTN_INFO:${rtn_info}，执行耗时:${produce_elapse} s"
fi
}


######################################################################
##脚本开始处理标志(模板)
######################################################################
fun_log 0 "--------------------------------开始脚本逻辑处理--------------------------------";
##执行开始时间
begin_time=`date +"%s"`;


######################################################################
##脚本逻辑处理(自定义)：脚本核心逻辑处理
######################################################################
while true ; do
	##手动停止
	if [[ -f ${app_path}/comm_rsmgr_dailly_j.out ]]; then
		rm ${app_path}/comm_rsmgr_dailly_j.out;
		fun_log 2 "识别到comm_rsmgr_dailly_j.out文件，人为退出";
		_exit 1;
	fi;

	##自动停止
	if [[ `date +"%s"` -gt ${auto_exit_time} ]]; then
		fun_log 0 "[comm_rsmgr_dailly_j] 后台常驻天任务第2天早上0点以后自动退出" ;
		break;
	fi;

    ##并发调用存储过程
	call_produce "SP_SM2_RSMGR_TEST" &
	#等待并行任务完成
	wait
	fun_log 0 "[comm_rsmgr_dailly_j] 延迟${sleep_sec}进行下一次调用" ;
	sleep ${sleep_sec};
    fun_log 0 "--------------------------------开始新一轮逻辑处理--------------------------------";
done;


######################################################################
##脚本结束处理标志(模板)
######################################################################
_exit 0;

