#!/usr/bin/env bash
######################################################################
##蚂蚁flink任务偏移量监控
######################################################################

######################################################################
##版本信息：版本注释，描述修改内容：
#####################################################
##版本号：v1.0
##修改日期：20230913
##修改内容：新建
##修改人员：陈棋旭
#####################################################


######################################################################
##配置
######################################################################
##路径
FWDIR="$(cd `dirname $0`;pwd)"


######################################################################
##通用函数(模板)：各脚本使用的通用函数，不够的在模板中添加
######################################################################
#########日志输出函数
##参数1：类型，0 info 1 warn 2 error
##参数2：日志内容
fun_log()
{
        case $1 in
                0 )
                        log_lev="INFO";
                ;;
                1 )
                        log_lev="WARN";
                ;;
                2 )
                        log_lev="ERROR";
                ;;
                * )
                        log_lev="no defined";
                ;;
        esac
        echo -e "`date +"%Y-%m-%d %H:%M:%S"` [${log_lev}] $2";
}


##返回结果处理
_exit()
{
	if [[ ${1} -eq 0 ]] ; then
		fun_log 0 "--------------------------------脚本逻辑处理结束--------------------------------";
		##执行结束时间
		end_time=`date +"%s"`;
		##执行耗时
		elapse=$((${end_time}-${begin_time}));
		fun_log 0 "脚本执行耗时:${elapse} s";
		exit 0;
	else
		fun_log 2 "--------------------------------脚本逻辑处理失败--------------------------------";
		exit 1;
	fi;
}


######################################################################
##脚本开始处理标志(模板)
######################################################################
fun_log 0 "--------------------------------开始脚本逻辑处理--------------------------------";
##执行开始时间
begin_time=`date +"%s"`;


######################################################################
##清理历史文件
######################################################################
fun_log 0 "--------------------------------清理历史文件--------------------------------"
rm /bi/app/realtime-jstorm/data/ant_kafka_lag/*


######################################################################
##从配置库查询消费组
######################################################################
fun_log 0 "--------------------------------从配置库查询消费组--------------------------------"
sh /bi/app/realtime-jstorm/nljstorm oracle_to_file toolconfig/ant_oracle_to_file.yaml


######################################################################
##遍历消费组
######################################################################
fun_log 0 "--------------------------------遍历消费组--------------------------------"
p_group_id=""
p_task_name=""
p_kafka_cluster=""
KEY="TOPIC"
FLAG=0
rm ${FWDIR}/logs/kafka_load_data.txt
cat /bi/app/realtime-jstorm/data/ant_kafka_lag/data0.txt | while read LINE
do
  p_group_id=`echo $LINE|awk -F ',' '{print $1}'`
  p_task_name=`echo $LINE|awk -F ',' '{print $2}'`
  kafka_cluster=`echo $LINE|awk -F ',' '{print $3}'`
  ##通过消费组获取偏移量
  fun_log 0 "--------------------------------通过消费组获取偏移量 p_group_id=${p_group_id} p_task_name=${p_task_name} kafka_cluster=${kafka_cluster}--------------------------------"
  sh /bi/app/realtime-jstorm/nljstorm kafka_group toolconfig/kafka_group_${kafka_cluster}.yaml --group_id ${p_group_id} > ${FWDIR}/logs/kafka_group.log
  cat ${FWDIR}/logs/kafka_group.log|while read LINE
  do
    if [[ $FLAG -eq 1 ]]; then
      echo $LINE|awk -v var1="$p_group_id" -v var2="$p_task_name" '{print var2","var1","$1","$2","$3","$4","$5}' >> ${FWDIR}/logs/kafka_load_data.txt
    fi
    if [[ $LINE == *$KEY* ]]; then
      FLAG=1
    fi
  done
  FLAG=0
done


######################################################################
##数据导入oracle
######################################################################
fun_log 0 "--------------------------------数据导入oracle--------------------------------"
sh /bi/app/realtime-jstorm/nljstorm file_to_oracle toolconfig/ant_file_to_oracle.yaml


######################################################################
##脚本结束处理标志(模板)
######################################################################
_exit 0;

